#
server {
	listen 10.11.3.1:8003;
	listen 127.0.0.1:8003;

	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	allow_methods POST GET;
	root ./tester/www;
	client_max_body_size 0;

	# Add index.php to the list if you are using PHP
	index  index.html index.php ;

	upload_path ./tester/www/website/upload/;

	server_name localhost;

	autoindex on;
	#rewrite /noindex/ /website/;

	location /noindex/ {
		allow_methods DELETE;
	}
	location /website/cgi-bin/php/
	{
		cgi_info .bla ./tester/www/website/cgi-bin/ubuntu_cgi_tester;
		cgi_info .php ./tester/www/website/cgi-bin/php-cgi;
		autoindex on;
	}
	location /phpver/
	{
		allow_methods GET;
		cgi_info .php ./tester/www/website/cgi-bin/php-cgi;
		autoindex off;
	}
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
